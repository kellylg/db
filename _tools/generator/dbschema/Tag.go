//Generated by webx-top/db
package dbschema

import (
	"github.com/webx-top/db"
	"github.com/webx-top/db/lib/factory"
	
)

type Tag struct {
	trans	*factory.Transaction
	
	Id             	int     	`db:"id,omitempty,pk" bson:"id,omitempty" comment:"ID" json:"id" xml:"id"`
	Name           	string  	`db:"name" bson:"name" comment:"标签名" json:"name" xml:"name"`
	Uid            	int     	`db:"uid" bson:"uid" comment:"创建者" json:"uid" xml:"uid"`
	Created        	int     	`db:"created" bson:"created" comment:"创建时间" json:"created" xml:"created"`
	Times          	int     	`db:"times" bson:"times" comment:"使用次数" json:"times" xml:"times"`
	RcType         	string  	`db:"rc_type" bson:"rc_type" comment:"关联类型" json:"rc_type" xml:"rc_type"`
}

func (this *Tag) SetTrans(trans *factory.Transaction) *Tag {
	this.trans = trans
	return this
}

func (this *Tag) Param() *factory.Param {
	return factory.NewParam(factory.DefaultFactory).SetTrans(this.trans).SetCollection("tag")
}

func (this *Tag) Get(mw func(db.Result) db.Result) error {
	return this.Param().SetRecv(this).SetMiddleware(mw).One()
}

func (this *Tag) List(mw func(db.Result) db.Result, page, size int) ([]*Tag, func() int64, error) {
	r := []*Tag{}
	counter, err := this.Param().SetPage(page).SetSize(size).SetRecv(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Tag) ListByOffset(mw func(db.Result) db.Result, offset, size int) ([]*Tag, func() int64, error) {
	r := []*Tag{}
	counter, err := this.Param().SetOffset(offset).SetSize(size).SetRecv(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Tag) Add(args ...*Tag) (interface{}, error) {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSend(data).Insert()
}

func (this *Tag) Edit(mw func(db.Result) db.Result, args ...*Tag) error {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSend(data).SetMiddleware(mw).Update()
}

func (this *Tag) Delete(mw func(db.Result) db.Result) error {
	return this.Param().SetMiddleware(mw).Delete()
}

