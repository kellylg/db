//Generated by webx-top/db
package dbschema

import (
	"github.com/webx-top/db"
	"github.com/webx-top/db/lib/factory"
	
)

type Config struct {
	Id             	int     	`db:"id,omitempty" comment:"主键ID"`
	Key            	string  	`db:"key" comment:"配置项"`
	Val            	string  	`db:"val" comment:"配置值"`
	Updated        	int     	`db:"updated" comment:"更新时间"`
}


func (this *Config) Param() *factory.Param {
	return factory.NewParam(Factory).SetCollection("config")
}

func (this *Config) Get(mw func(db.Result) db.Result) error {
	return this.Param().SetResult(this).SetMiddleware(mw).One()
}

func (this *Config) List(mw func(db.Result) db.Result, page, size int) ([]*Config, func() int64, error) {
	r := []*Config{}
	counter, err := this.Param().SetPage(page).SetSize(size).SetResult(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Config) ListByOffset(mw func(db.Result) db.Result, offset, size int) ([]*Config, func() int64, error) {
	r := []*Config{}
	counter, err := this.Param().SetOffset(offset).SetSize(size).SetResult(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Config) Add(args ...*Config) (interface{}, error) {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSave(data).Insert()
}

func (this *Config) Edit(mw func(db.Result) db.Result, args ...*Config) error {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSave(data).SetMiddleware(mw).Update()
}

func (this *Config) Delete(mw func(db.Result) db.Result) error {
	return this.Param().SetMiddleware(mw).Delete()
}

