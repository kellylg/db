//Generated by webx-top/db
package dbschema

import (
	"github.com/webx-top/db"
	"github.com/webx-top/db/lib/factory"
	
)

type Config struct {
	trans	*factory.Transaction
	
	Id             	int     	`db:"id,omitempty,pk" bson:"id,omitempty" comment:"主键ID" json:"id" xml:"id"`
	Key            	string  	`db:"key" bson:"key" comment:"配置项" json:"key" xml:"key"`
	Val            	string  	`db:"val" bson:"val" comment:"配置值" json:"val" xml:"val"`
	Updated        	int     	`db:"updated" bson:"updated" comment:"更新时间" json:"updated" xml:"updated"`
}

func (this *Config) SetTrans(trans *factory.Transaction) *Config {
	this.trans = trans
	return this
}

func (this *Config) Param() *factory.Param {
	return factory.NewParam(factory.DefaultFactory).SetTrans(this.trans).SetCollection("config")
}

func (this *Config) Get(mw func(db.Result) db.Result) error {
	return this.Param().SetRecv(this).SetMiddleware(mw).One()
}

func (this *Config) List(mw func(db.Result) db.Result, page, size int) ([]*Config, func() int64, error) {
	r := []*Config{}
	counter, err := this.Param().SetPage(page).SetSize(size).SetRecv(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Config) ListByOffset(mw func(db.Result) db.Result, offset, size int) ([]*Config, func() int64, error) {
	r := []*Config{}
	counter, err := this.Param().SetOffset(offset).SetSize(size).SetRecv(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Config) Add(args ...*Config) (interface{}, error) {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSend(data).Insert()
}

func (this *Config) Edit(mw func(db.Result) db.Result, args ...*Config) error {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSend(data).SetMiddleware(mw).Update()
}

func (this *Config) Delete(mw func(db.Result) db.Result) error {
	return this.Param().SetMiddleware(mw).Delete()
}

