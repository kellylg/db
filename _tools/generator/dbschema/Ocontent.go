//Generated by webx-top/db
package dbschema

import (
	"github.com/webx-top/db"
	"github.com/webx-top/db/lib/factory"
	
)

type Ocontent struct {
	trans	*factory.Transaction
	objects []*Ocontent
	
	Id     	uint    	`db:"id,omitempty,pk" bson:"id,omitempty" comment:"ID" json:"id" xml:"id"`
	RcId   	uint    	`db:"rc_id" bson:"rc_id" comment:"关联ID" json:"rc_id" xml:"rc_id"`
	RcType 	string  	`db:"rc_type" bson:"rc_type" comment:"关联类型" json:"rc_type" xml:"rc_type"`
	Content	string  	`db:"content" bson:"content" comment:"博客原始内容" json:"content" xml:"content"`
	Etype  	string  	`db:"etype" bson:"etype" comment:"编辑器类型" json:"etype" xml:"etype"`
}

func (this *Ocontent) Trans() *factory.Transaction {
	return this.trans
}

func (this *Ocontent) Use(trans *factory.Transaction) factory.Model {
	this.trans = trans
	return this
}

func (this *Ocontent) Objects() []*Ocontent {
	if this.objects==nil {
		return nil
	}
	return this.objects[:]
}

func (this *Ocontent) NewObjects() *[]*Ocontent {
	this.objects=[]*Ocontent{}
	return &this.objects
}

func (this *Ocontent) Param() *factory.Param {
	return factory.NewParam(factory.DefaultFactory).SetTrans(this.trans).SetCollection("ocontent").SetModel(this)
}

func (this *Ocontent) Get(mw func(db.Result) db.Result, args ...interface{}) error {
	return this.Param().SetArgs(args...).SetRecv(this).SetMiddleware(mw).One()
}

func (this *Ocontent) List(recv interface{},mw func(db.Result) db.Result, page, size int, args ...interface{}) (func() int64, error) {
	if recv == nil {
		recv = this.NewObjects()
	}
	return this.Param().SetArgs(args...).SetPage(page).SetSize(size).SetRecv(recv).SetMiddleware(mw).List()
}

func (this *Ocontent) ListByOffset(recv interface{},mw func(db.Result) db.Result, offset, size int, args ...interface{}) (func() int64, error) {
	if recv == nil {
		recv = this.NewObjects()
	}
	return this.Param().SetArgs(args...).SetOffset(offset).SetSize(size).SetRecv(recv).SetMiddleware(mw).List()
}

func (this *Ocontent) Add() (interface{}, error) {
	
	return this.Param().SetSend(this).Insert()
}

func (this *Ocontent) Edit(mw func(db.Result) db.Result, args ...interface{}) error {
	
	return this.Param().SetArgs(args...).SetSend(this).SetMiddleware(mw).Update()
}

func (this *Ocontent) Delete(mw func(db.Result) db.Result, args ...interface{}) error {
	
	return this.Param().SetMiddleware(mw).Delete()
}

