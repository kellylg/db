//Generated by webx-top/db
package dbschema

import (
	"github.com/webx-top/db"
	"github.com/webx-top/db/lib/factory"
	
)

type Category struct {
	Id             	int     	`db:"id,omitempty" comment:"ID"`
	Pid            	int     	`db:"pid" comment:"上级分类"`
	Name           	string  	`db:"name" comment:"分类名称"`
	Description    	string  	`db:"description" comment:"说明"`
	Haschild       	string  	`db:"haschild" comment:"是否有子分类"`
	Updated        	int     	`db:"updated" comment:"更新时间"`
	RcType         	string  	`db:"rc_type" comment:"关联类型"`
	Sort           	int     	`db:"sort" comment:"排序"`
	Tmpl           	string  	`db:"tmpl" comment:"模板"`
}


func (this *Category) Param() *factory.Param {
	return factory.NewParam(Factory).SetCollection("category")
}

func (this *Category) Get(mw func(db.Result) db.Result) error {
	return this.Param().SetResult(this).SetMiddleware(mw).One()
}

func (this *Category) List(mw func(db.Result) db.Result, page, size int) ([]*Category, func() int64, error) {
	r := []*Category{}
	counter, err := this.Param().SetPage(page).SetSize(size).SetResult(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Category) ListByOffset(mw func(db.Result) db.Result, offset, size int) ([]*Category, func() int64, error) {
	r := []*Category{}
	counter, err := this.Param().SetOffset(offset).SetSize(size).SetResult(&r).SetMiddleware(mw).List()
	return r, counter, err
}

func (this *Category) Add(args ...*Category) (interface{}, error) {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSave(data).Insert()
}

func (this *Category) Edit(mw func(db.Result) db.Result, args ...*Category) error {
	var data = this
	if len(args)>0 {
		data = args[0]
	}
	return this.Param().SetSave(data).SetMiddleware(mw).Update()
}

func (this *Category) Delete(mw func(db.Result) db.Result) error {
	return this.Param().SetMiddleware(mw).Delete()
}

